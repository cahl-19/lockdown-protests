# Example Configuration file for ldprotest


# Database connect string. It is strongly reccomended to use a stronger
# password in production environments.

mongoConnect: 'mongodb://ldprotest:ldprotest@localhost:27017/?serverSelectionTimeoutMS=3000'

# Path to logback.xml file to configure system logging. If unset or set to null, logs are sent to stdout
# See examples for example logback.xml
logbackPath: null

webServerConfig:
    # TCP port which the HTTP server serves on
    serverPort: 4567

    # If false, the application will not set secure flag on cookies or use https
    # for endpoints on this server. Should be set to false for development
    # environments only
    usingHttps: true
    # Max age value to send as Strict-Transport-Security header. Disabled if usingHttps == false or if value is <= 0
    hstsMaxAge: 31536000

    # Max age Value (in seconds) to send to browsers for HTTP caching of static files (API endpoints may set their own
    # values)
    httpCacheMaxAge: 60

    # Set to true if using a reverse proxy such as nginx. If true, ldprotest will expect to see the client IP address
    # passed in as the 'X-Real-IP' header
    usingReverseProxy: true

userSessionConfig:
    # Seconds until a user session expires
    sessionExpiresSeconds: 604800
    # Seconds between key rotations of JWT RSA Keys
    tokenKeyRotateSeconds: 2592000
    # Seconds until a generated RSA key is deleted
    tokenKeyDeletionSeconds: 5184000
    # Seconds until JWT tokens expire. Note that this sets the limit on the time it takes for a user
    # lockout/ban to take effect because the application won't check the database until the token expires.
    # Setting this value too low, however, results in excessive database queries for user session data
    tokenExpiresSeconds: 900

keyStoreConfig:
    # Path to directory to store JWT signing keys. It is *very* important that these keys are kept private and
    # secure. Compromised keys will lead to a total breach of alll user accounts. Keys should be kept in a directory
    # readable only by the user account which runs the ldprotest server.

    # The directory must exist in the file system and be acessible by the user account which runs the ldprotest
    # server.

    # You probably do not want to store keys in tmpfs (the path below is for example purposes only) on a production
    # system because this will result in keys being deleted on each reboot.

    # If this option is set to the empty string or is left unspecified, keys will be volatile and will be lost each
    # time the applicatioon restarts.
    fsKeyStorePath: '/tmp/ldprotest-keys'

# Configuration for mabox API
# If not properly defined, the app as a whole will not work because the map UI will cease to function.
mapboxConfig:

    # Configuration for static token which will be used on each request, or as a fallback if other token management
    # schemes fail
    staticConfig:
        # Public mapbox API token
        apiToken: null

    # Configuration for temporary mapbox API token management

    # Temporary tokens are created and automatically rotated periodically. The disadvantages of using temporary tokens
    # (as opposed to explicitly managed token rotation) are that tokens cannot be manually revoked or restricted to
    # particular URLs.
    temporaryTokenConfig:
        # Username of mapbox account which owns the token. Not that setting to null disables this config
        username: null
        # Mapbox access token which has the tokens:write scope. Used for requesting new temporary tokens
        accessToken: null
        # Expire time for temporary tokens. Must not be greater than one hour and configuring too close to one hour
        # risks rejection from the mapbox API server (due to request transit latency).
        expiresSeconds: 3540
        # Temporary token refresh period. Should be somewhat less than the expires seconds so that the old token
        #  will be valid in between client refreshes.
        renewSeconds: 3180
        # Client token refresh period. Should be less than the difference between renewSeconds and expiresSeconds so
        # that the client never attempts to use an expired token
        clientTokenRefreshSeconds: 300

    # Configuration for key rotation mapbox API token management

    # Note that this configuration type take precedence over the temporary token config if both are present and
    # fully defined
    # The disadvantage of explicitly rotation tokens is that the app must be running and fully functional in order for
    # rotation to occur. Although temporary tokens cannot be manually revoked, or restricted to certain URLs, they
    # will expire on their own even if the app isn't functioning.
    rotatingTokenConfig:
        # Username of mapbox account which owns the token
        username: null
        # Mapbox access token which has the tokens:write scope. Used for requesting new temporary tokens
        accessToken: null
        # Expire time for temporary tokens. Must not be greater than one hour and configuring too close to one hour
        # risks rejection from the mapbox API server (due to request transit latency).
        expiresSeconds: 86400
        # Temporary token refresh period. Should be somewhat less than the expires seconds so that the old token
        #  will be valid in between client refreshes.
        renewSeconds: 172800
        # Client token refresh period. Should be less than the difference between renewSeconds and expiresSeconds so
        # that the client never attempts to use an expired token
        clientTokenRefreshSeconds: 3600
        # List of permitted referrer URLs. See mapbox API documentation for more details.
        allowedUrls: ['http://localhost:4567']
        # Pattern to use for naming tokens. If attempting to run ldprotest with multiple servers, this pattern must be
        # unique  for each server. If pattern does not include %n, rotation numbers will be appened to the end of the
        # string
        tokenNamePattern: 'ldprotest-%n'
        # frequency at which the server polls the mabbox API in order to rotate expired tokens
        serverPollSeconds: 300

# Configure appearence of site and open graph tags.
style:

    # Various Open Graph Protocol Meta Attributes
    ogType: 'website'
    ogTitle: 'Lockdown Protest Planner'
    ogDescription: 'A website for planning and geographic tracking of lockdown related protests and demonstrations'
    ogUrl: null

    # Image should be served either directly by your reverse proxy (i.e. nginx) or by some CDN
    # There should be no reason to have ldprotest serve these files directly.
    ogImage: null

    # HTML title to use on the index (/) page
    indexTitle: 'Find Lockdown Protests'

    # Path to file to use to define the topbar banner (please be **very** mindful of XSS).
    # File content should be formatted as an html snippet (ex. <h1>Welcome to LdProtest</h1>) and encoded as UTF-8.
    bannerHtmlPath: null
    # URL to custom css file to include on each page. Note that the css file is included last and therefore has the
    # ability to override any other linked css on the page.
    # The style sheet must be served by a seperate web server, such as NGINX.
    css: null

    # Path to file to define custom html content of the information modal.
    informationBodyHtmlPath: null
    # Path to file to define the information modal's title as html.
    informationTitleHtmlPath: null

# App feature switches and config options
features:

    # If true, hides the side-bar (on desktop) and menu button (on modile) are hidden from unauthenticated users
    # An "about" button is added so that users can still view app info and contributing options.

    # Users with credentials can still login via the /login page.

    # This does not mean that a dedicated individual cannot attempt to login, however, unless a sophisticated
    # firewall configuration is employed to block access to login pages and api endpoints based on IP address.
    disablePublicLogin: false

    # If true disables lookup of approximate geo location from IP address on initial page load.

    # geo IP lookup singificanttly improves UX for clients who disable (or decline when asked to enable)) location
    # services yet still expect mapping apps to start at their approximate location (probably quite common for this
    # app's target uer-base).

    #  Should be set to true if performance of the geo lookup is a concern or to avoid a pointless database query
    # in the case that no geo IP data has been loaded using the import-ip-location-csv command.
    disableGeoIpLookup: true

    # Required attributions for APIs and software

    # The IP2Locatin API attribuution is required if the free IP2Location database was imported for GEO IP lookup.
    attributions: [
            "This site or product includes IP2Location LITE data available from \
            <a href='http://www.ip2location.com'>http://www.ip2location.com.</a>"
        ]